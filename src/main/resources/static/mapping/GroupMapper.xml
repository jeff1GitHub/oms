<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.og.oms.dao.GroupMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.og.oms.model.Group">
		<id column="f_id" property="id" />
		<result column="name" property="name" />
		<result column="is_disable" property="isDisable" />
		<result column="create_time" property="createTime" />
		<result column="create_user" property="createUser" />
		<result column="update_time" property="updateTime" />
		<result column="update_user" property="updateUser" />
		<result column="remark" property="remark" />
		<result column="parent_id" property="parentId" />
		<result column="is_del" property="isDel" />
	</resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        f_id AS id, name, is_disable AS isDisable, create_time AS createTime, create_user AS createUser, update_time AS updateTime, update_user AS updateUser, remark, parent_id AS parentId, is_del AS isDel
    </sql>
    
    <select id="getChildGroupListForUser" parameterType="java.util.ArrayList" resultType="com.og.oms.model.Group">
			WITH RECURSIVE groupss (f_id, parent_id) AS (
			SELECT
				t_group.f_id AS fId,
				t_group.name,
				t_group.is_disable AS isDisable,
				t_group.create_time AS createTime,
				t_group.create_user AS createUser,
				t_group.update_time AS updateTime,
				t_group.update_user AS updateUser,
				t_group.remark,
				t_group.parent_id AS parentId,
				t_group.is_del AS isDel,
				tgu."userCount"
			FROM
				t_group left join (select count(user_id) as "userCount", group_id from t_group_user group by group_id) as tgu on t_group.f_id = tgu.group_id
			WHERE
				f_id in
				<foreach collection="list" item="item" index="index" open="(" separator="," close=")">
	            	#{item}
	            </foreach>
			UNION ALL
				SELECT
				mm.f_id AS fId,
				mm.name,
				mm.is_disable AS isDisable,
				mm.create_time AS createTime,
				mm.create_user AS createUser,
				mm.update_time AS updateTime,
				mm.update_user AS updateUser,
				mm.remark,
				mm.parent_id AS parentId,
				mm.is_del AS isDel,
				tgu."userCount"
				FROM
					t_group AS mm
				INNER JOIN groupss AS child ON mm.parent_id = child.f_id
				left join (select count(user_id) as "userCount", group_id from t_group_user group by group_id) as tgu on mm.f_id = tgu.group_id
			) SELECT DISTINCT
				f_id as id,
			  parent_id as name,
			  isdisable as "isDisable",
			  createtime as "createTime",
			  createuser as "createUser",
			  updatetime as "updateTime",
			  updateuser as "updateUser",
			  remark,
			  parentid as "parentId",
			  isdel as "isDel",
			  COALESCE("userCount", 0) as "userCount"
			FROM
				groupss 
			ORDER BY
				f_id
    </select>
    
    <select id="getGroupsForUserByUserId" parameterType="java.lang.Integer" resultType="com.og.oms.model.Group">
    	select 
			<include refid="Base_Column_List"></include>
		from (select group_id from t_group_user where user_id=#{userId}) as tgu 
		left join t_group as tg on tgu.group_id = tg.f_id
    </select>

</mapper>
